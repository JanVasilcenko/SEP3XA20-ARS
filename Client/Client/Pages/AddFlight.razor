@page "/addFlights"
@attribute [Authorize]
@using Client.Data
@using Client.Model
@inject IFlightService flightService
@inject IAirplaneService airplaneService
@inject IAirportService airportService
@inject NavigationManager navigationManager




<EditForm Model="@newFlight" OnValidSubmit="@AddNewFlight">
    <DataAnnotationsValidator />
    <div class="section">
        <div class="section-center">
            <div class="container d-flex justify-content-center">
                <div class="row">
                    <div class="booking-form">
                        <div class="col-12">

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
<<<<<<< HEAD
                                        <span class="form-label">Flying from</span>
                                        <InputSelect class="form-control" placeholder="Flying from" @bind-Value="whereTo">
                                            @if (airports == null)
                                            {
                                                <option>No airports in database</option>
                                            }
                                            else
                                            {
                                                <option default>Choose airport</option>
                                                @foreach (var item in airports)
                                                {
                                                    <option>@item.airportName</option>
                                                }
                                            }
                                        </InputSelect>

                                        <!--
                                            <span class="form-label">Number of seats</span>
                                            <InputNumber class="form-control" placeholder="Number of seats" @bind-Value="newFlight.numberOfSeatRemaining" />
                                        -->
=======
                                        <span class="form-label">Number of seats</span>
                                        <InputNumber class="form-control" placeholder="Number of seats" @bind-Value="newFlight.numberOfSeatRemaining" />
>>>>>>> f3988bb18ec7d15386bb96fa25cebca568cfe863
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <span class="form-label">Flying to</span>
                                        <InputSelect class="form-control" placeholder="Flying To" @bind-Value="whereFrom">
                                            @if (airports == null)
                                            {
                                                <option>No airports in database</option>
                                            }
                                            else
                                            {
                                                <option default>Choose airport</option>
                                                @foreach (var item in airports)
                                                {
                                                    <option>@item.airportName</option>
                                                }
                                            }
                                        </InputSelect>
                                    </div>
                                </div>

                                <div class="col-md-11 text-center">
                                    <div style="color:red" class="font-weight-bold">@errorMessage</div>
                                </div>


                            </div>
                            <!--
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <span class="form-label">Departing</span>
                                        <input class="form-control" type="date" required @bind-value="newDeparture.departureTime">
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <span class="form-label">Returning</span>
                                        <input class="form-control" type="date" required @bind-value="newArrival.arrivalTime">
                                    </div>
                                </div>
                                <!--<div class="col-md-2">
        <div class="form-group">
            <span class="form-label">Seat capacity</span>
            <input class="form-control" type="number" @bind-value="newFlight.numberOfSeatRemaining">
            <span class="select-arrow"></span>
        </div>
    </div>-->
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <span class="form-label">Reg. NO</span>
                                        <InputSelect @bind-Value="requestedPlane">
                                            @if (airplanes == null)
                                            {
                                                <option>NoPlanesInDatabase</option>
                                            }
                                            else
                                            {
                                                <option default>Choose plane</option>
                                                @foreach (var item in airplanes)
                                                {
                                                    <option>@item.planeType</option>
                                                }
                                            }
                                        </InputSelect>
                                        <span class="select-arrow"></span>
                                    </div>
                                </div>
                            </div>
                                -->

                            <div class="row">
                                <div class="col-md-5 offset-md-3">
                                    <div class="form-btn">
                                        <button class="submit-btn">Add flight</button>
                                    </div>
                                </div>
                                <ValidationSummary />
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</EditForm>
@code {
    private Flight newFlight = new Flight();
    private Departure newDeparture = new Departure();
    private Arrival newArrival = new Arrival();
    private IList<Airplane> airplanes;
    private IList<Airport> airports;
    private string requestedPlane;
    private string whereFrom;
    private string whereTo;
    private string errorMessage;
    protected override async Task OnInitializedAsync()
    {
        airports = await airportService.getAirports();
        airplanes = await airplaneService.GetFlights();
        errorMessage = "";
    }

    private async Task AddNewFlight()
    {
        if (requestedPlane == null)
        {
            errorMessage = "Please choose a flight";
        }
        else
        {
            //Setting where to
            Airport from = await airportService.getAirportByName(whereTo);
            newDeparture.fromWhere = from.IATACode;

            //Setting from where
            Airport to = await airportService.getAirportByName(whereFrom);
            newArrival.fromWhere = to.IATACode;

            //Setting registration nubmer of plane
            Airplane airplane = await airplaneService.getRegNumByType(requestedPlane);
            newFlight.airplaneRegNum = airplane.registrationNumber.ToString();
            newFlight.numberOfSeatRemaining = airplane.numberOfSeats;

            Flight test = await flightService.AddFlight(newFlight,newArrival,newDeparture);
            navigationManager.NavigateTo("/flightList");
        }


    }
}
