@page "/addFlights"
@attribute [Authorize]
@using Client.Data
@using Client.Model
@inject IFlightService flightService
@inject IAirplaneService airplaneService
@inject NavigationManager navigationManager




<EditForm Model="@newFlight" OnValidSubmit="@AddNewFlight">
    <DataAnnotationsValidator />
    <div id="booking" class="section">
        <div class="section-center">
            <div class="container d-flex justify-content-center">
                <div class="row">
                    <div class="booking-form">
                        <div class="col-12">

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <span class="form-label">Number of seats</span>
                                        <InputNumber class="form-control" placeholder="Number of seats" @bind-Value="newFlight.numberOfSeatRemaining" />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <span class="form-label">Flying to</span>
                                        <InputSelect class="form-control" placeholder="Airplane reg num" @bind-Value="newFlight.airplaneRegNum">
                                            @if (airplanes == null)
                                            {
                                                <option>NoPlanesInDatabase</option>
                                            }
                                            else
                                            {
                                                @foreach (var item in airplanes)
                                                {
                                                    <option>@item.registrationNumber</option>
                                                }
                                            }
                                        </InputSelect>
                                    </div>
                                </div>
                            </div>
                            <!--
    <div class="row">
        <div class="col-md-3">
            <div class="form-group">
                <span class="form-label">Departing</span>
                <input class="form-control" type="date" required>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                <span class="form-label">Returning</span>
                <input class="form-control" type="date" required>
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <span class="form-label">Seat capacity</span>
                <input class="form-control" type="number">
                <span class="select-arrow"></span>
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <span class="form-label">Reg. NO</span>
                <input class="form-control" type="number">
                <span class="select-arrow"></span>
            </div>
        </div>
    </div>
        -->

                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-btn">
                                        <button class="submit-btn">Add flight</button>
                                    </div>
                                </div>
                                <ValidationSummary />
                            </div>
                        </div>
                    </div>
                        
                </div>
            </div>
        </div>
    </div>
</EditForm>
    @code {
        private Flight newFlight = new Flight();
        private IList<Airplane> airplanes;

        protected override async Task OnInitializedAsync() 
        {
            airplanes = await airplaneService.GetFlights();
        }

        private async Task AddNewFlight()
        {
            Flight test = await flightService.AddFlight(newFlight);
            navigationManager.NavigateTo("/flightList");
        }
    }
