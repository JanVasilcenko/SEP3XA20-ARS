@namespace AddLuggageService
@using Client.Model;

<EditForm EditContext="EC" class="d-flex">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="luggage-wrap luggage-card text-center">
        <img src="/css/Assets/suitcase.png" class="suitcase" />
        <p>None</p>
        <input type="button" value="None" class="btn btn-primary btn-rounded" @onclick="OnLuggageTypeChangeNone" />
    </div>


    <div class="luggage-wrap luggage-card text-center">
        <img src="/css/Assets/suitcase.png" class="suitcase" />
        <p>Small 10kg</p>

        <input type="button" value="Small" class="btn btn-primary btn-rounded" @onclick="OnLuggageTypeChangeSmall" />
    </div>
    <div class="luggage-wrap luggage-card text-center">
        <img src="/css/Assets/medium-suitcase.png" class="suitcase" />
        <p>Medium 20kg</p>

        <input type="button" value="Medium" class="btn btn-primary btn-rounded" @onclick="OnLuggageTypeChangeMedium" />
    </div>
    <div class="luggage-wrap luggage-card text-center">
        <img src="/css/Assets/large-suitcase.png" class="suitcase" />
        <p>Large 35kg</p>

        <input type="button" class="btn btn-primary btn-rounded" value="Large" @onclick="OnLuggageTypeChangeLarge" />
    </div>

</EditForm>

@code {
    [Parameter]
    public Ticket luggageType { get; set; }
    [Parameter]
    public EventCallback<Ticket> luggageTypeChanged { get; set; }

    private EditContext EC { get; set; }

    private Task OnLuggageTypeChange(ChangeEventArgs e)
    {
        return luggageTypeChanged.InvokeAsync(luggageType);
    }

    private void OnLuggageTypeChangeNone(MouseEventArgs e)
    {
        luggageType.price = 0;
        luggageType.luggage = "None";
    }
    private void OnLuggageTypeChangeSmall(MouseEventArgs e)
    {
        luggageType.price = 75;
        luggageType.luggage = "Small";
    }
    private void OnLuggageTypeChangeMedium(MouseEventArgs e)
    {
        luggageType.price = 75;
        luggageType.luggage = "Medium";
    }
    private void OnLuggageTypeChangeLarge(MouseEventArgs e)
    {
        luggageType.price = 75;
        luggageType.luggage = "Large";
    }
    protected override void OnInitialized()
    {
        EC = new EditContext(luggageType);
    }

    public bool ValidateLuggage()
    {
        return EC.Validate();
    }


}