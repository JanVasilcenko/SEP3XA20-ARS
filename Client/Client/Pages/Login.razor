@page "/login"
@using Client.Authentication
@inject AuthenticationStateProvider AuthenticationStateProvider



<div class="container-fluid d-flex justify-content-center align-items-center vh-100">
    <div class="row main-content text-center">
        <div class="col-md-4 text-center company__info">

            <img src="/css/Assets/login_image.jpg" asp-append-version="true" height="300" />
        </div>
        <div class="col-md-8 col-xs-12 col-sm-12 login_form ">
            <div class="container-fluid">
                <div class="row">
                    <h2>Log In</h2>
                </div>
                <div class="row">
                    <form control="" class="form-group">
                        <div class="row">
                            <input type="text" name="username" id="username" class="form__input" placeholder="Email" @bind-value="email">
                        </div>
                        <div class="row">
                            <!-- <span class="fa fa-lock"></span> -->
                            <input type="password" name="password" id="password" class="form__input" placeholder="Password" @bind-value="password">
                        </div>
                        <div class="row align-items-baseline">
                            <input type="checkbox" name="remember_me" id="remember_me" class="mr-2">
                            <label for="remember_me">Remember Me!</label>
                        </div>
                        <div class="row">
                            <input type="submit" value="Submit" class="btn btn-primary" @onclick="PerformLogin">
                        </div>
                    </form>
                </div>
                <div class="row">
                    <p>Don't have an account? <a href="register">Register Here</a></p>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Footer -->


@code {
    private string email;
    private string password;

    public async Task PerformLogin()
    {
        try
        {
            await ((CustomAuthenticationStateProvider)AuthenticationStateProvider).ValidateLogin(email, password);

        }
        catch (Exception e)
        {

        }
    }
}
