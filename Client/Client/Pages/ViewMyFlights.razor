@page "/viewmyflights"
@using Client.Model
@using Client.Data
@using System.Net
@using Client.Security
@inject IPassengerService passengerService
@inject IBookingService bookingService
@inject IFlightInfoService flightInfoService
@inject SecurityService  securityService
@inject NavigationManager NavigationManager
@inject CustomDataProtection customDataProtection
@attribute [Authorize]

<div class="container mt-5">
    <div class="row justify-content-center align-content-center align-items-center">
        <div class="col-12 text-center">
            <h2> Upcoming flights</h2>
        </div>


        @if (myFlights == null)
        {
            <p>Loading...</p>
        }
        else if (!myFlights.Any())
        {
            <div class="col-12 col-md-8 d-flex overview-card empty  text-center justify-content-center p-3 align-items-center text-center">
                <span>You don't have any flights booked</span>
            </div>
        }
        else
        {
            foreach (FlightInfo f in myFlights)
            {
                <div class="col-12 col-md-8 d-flex  border p-3 align-items-center my-3">
                    <span>@f.passenger.firstname</span>
                    <span>@f.flight.status</span>
                    <span>@f.departure.fromWhere</span>
                    <span>-</span>
                    <span>@f.arrival.fromWhere</span>
                    @if (f.flight.status.Equals("cancelled"))
                    {

                    }
                    else
                    {
                        <button class="btn btn-primary btn-rounded ml-auto" @onclick="()=>ViewDetails(f.passenger,f.flight)"> View details</button>
                    }
                </div>
            }
        }
    </div>
</div>

@code {
    private List<Passenger> myPassengers = new List<Passenger>();
    private List<FlightInfo> myFlights = new List<FlightInfo>();

    protected async override Task OnInitializedAsync()
    {
        myPassengers = await passengerService.getMyPassengers(bookingService.getUsername());
        myFlights = await flightInfoService.getFlightInfoPass(bookingService.getUsername());
    }

    private void ViewDetails(Passenger passenger, Flight flight)
    {
        string encodedStringPass = customDataProtection.Encode("PassengerNum");
        string encodedStringID = customDataProtection.Encode("FlightID");
        securityService.passengerPassportFlightDetails = encodedStringPass;
        securityService.flightIDFlightDetails = encodedStringID;
        NavigationManager.NavigateTo("/flightdetail?" + encodedStringPass + "=" + customDataProtection.Encode(passenger.passportNumber.ToString()) + "&" + encodedStringID + "=" + customDataProtection.Encode(flight.id.ToString()));
    }
}